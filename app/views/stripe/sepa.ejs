<form action="/sepaSubscription" method="post" id="sepa-form">
        <input type="hidden" value="sepa" name="payment_method"/>
        <input type="hidden" value="<%= user_id %>" name="user_id"/>     
        <input type="hidden" value="<%= product.name %>" name="productName"/>
        <input type="hidden" value="<%= plan.id %>" name="planId"/>
        <input type="hidden" value="<%= plan.amount %>" name="planAmount"/>
        <input type="hidden" value="<%= plan.name %>" name="planName"/>
        <input type="hidden" value="<%= plan.interval %>" name="planInterval"/>
        <input type="hidden" value="<%= plan.interval_count %>" 
  <div class="form-row inline">
    <div class="col">
      <label for="accountholder-name">
        Name
      </label>
      <input
        id="accountholder-name"
        name="accountholder-name"
        placeholder="Jenny Rosen"
        required
      />
    </div>

    <div class="col">
      <label for="email">
        Email Address
      </label>
      <input
        id="email"
        name="email"
        type="email"
        placeholder="jenny.rosen@example.com"
        required
      />
    </div>
  </div>

  <div class="form-row">
    <!--
      Using a label with a for attribute that matches the ID of the
      Element container enables the Element to automatically gain focus
      when the customer clicks on the label.
    -->
    <label for="iban-element">
      IBAN
    </label>
    <div id="iban-element">
      <!-- A Stripe Element will be inserted here. -->
    </div>
  </div>

  <!-- Add the client_secret from the SetupIntent as a data attribute   -->
  <button id="submit-button" data-secret="{CLIENT_SECRET}">
    Set up SEPA Direct Debit
  </button>

  <!-- Display mandate acceptance text. -->
  <div id="mandate-acceptance">
    By providing your payment information and confirming this payment, you
    authorise (A) Rocketship Inc and Stripe, our payment service provider, to
    send instructions to your bank to debit your account and (B) your bank to
    debit your account in accordance with those instructions. As part of your
    rights, you are entitled to a refund from your bank under the terms and
    conditions of your agreement with your bank. A refund must be claimed
    within 8 weeks starting from the date on which your account was debited.
    Your rights are explained in a statement that you can obtain from your
    bank. You agree to receive notifications for future debits up to 2 days
    before they occur.
  </div>

  <!-- Used to display form errors. -->
  <div id="error-message" role="alert"></div>
</form>

<script src="https://js.stripe.com/v3/"></script>


<script>
// Custom styling can be passed to options when creating an Element.
var style = {
  base: {
    color: '#32325d',
    fontSize: '16px',
    '::placeholder': {
      color: '#aab7c4'
    },
    ':-webkit-autofill': {
      color: '#32325d',
    },
  },
  invalid: {
    color: '#fa755a',
    iconColor: '#fa755a',
    ':-webkit-autofill': {
      color: '#fa755a',
    },
  },
};

var options = {
  style: style,
  supportedCountries: ['SEPA'],
  // Elements can use a placeholder as an example IBAN that reflects
  // the IBAN format of your customer's country. If you know your
  // customer's country, we recommend that you pass it to the Element as the
  // placeholderCountry.
  placeholderCountry: 'FR',
};

var stripe = Stripe('pk_test_51HbmNKFQhqMEtWtAFmtE5npdY73RSsMMUfc2DtrY9fKhYxLuhTMZPfX7dYXGSKKPKigphcgkhhKhgBecn79xEHe400L2f9tuRu');
var elements = stripe.elements();

// Create an instance of the IBAN Element
var iban = elements.create('iban', options);

// Add an instance of the IBAN Element into the `iban-element` <div>
iban.mount('#iban-element');

  /* Handle validation errors */
    iban.addEventListener('change', event => {
      var displayError = document.getElementById('error-message');
      
      if (event.error) {
        displayError.textContent = event.error.message;
      } else {
        displayError.textContent = ''; 
      }
    });




    /* Create a token when the form is submitted */
    var form = document.getElementById('sepa-form');

    form.addEventListener('submit', function(event) {
      event.preventDefault();

      let name = document.getElementById("accountholder-name").value;
      let email = document.getElementById("email").value;

      var sourceData = {
        type: 'sepa_debit',
        currency: 'eur',
        owner: {
          name: name,
          email: email,
        },
        mandate: {
          // Automatically send a mandate notification email to your customer
          // once the source is charged.
          notification_method: 'email',
        },
      };

      // Call `stripe.createSource` with the IBAN Element and additional options.
      stripe.createSource(iban, sourceData).then(function(result) {
        if (result.error) {
          // Inform the customer that there was an error.
          var errorElement = document.getElementById('error-message');
          errorElement.textContent = result.error.message;
        } else {
          // Send the Source to your server.
          stripeSourceHandlerSepa(result.source);
        }
      });
    });    

  function stripeSourceHandlerSepa(source) {
    var form = document.getElementById('sepa-form');
    var hiddenInput = document.createElement('input');
    hiddenInput.setAttribute('type', 'hidden');
    hiddenInput.setAttribute('name', 'stripeSource');
    hiddenInput.setAttribute('value', source.id);
    form.appendChild(hiddenInput);

    // Submit the form.
    form.submit();
  }     


var form = document.getElementById('sepa-form');
var accountholderName = document.getElementById('accountholder-name');
var email = document.getElementById('email');
var submitButton = document.getElementById('submit-button');



</script>